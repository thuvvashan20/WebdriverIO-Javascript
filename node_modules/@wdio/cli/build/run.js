"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = run;
exports.launch = launch;

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _launcher = _interopRequireDefault(require("./launcher.js"));

var _watcher = _interopRequireDefault(require("./watcher"));

var _setup = _interopRequireDefault(require("./setup"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function run(params) {
  let stdinData = '';
  const firstArgument = params._[0];

  const commands = _fs.default.readdirSync(_path.default.join(__dirname, 'commands')).map(file => _path.default.parse(file).name);

  const localConf = _path.default.join(process.cwd(), 'wdio.conf.js');

  const wdioConf = firstArgument || (_fs.default.existsSync(localConf) ? localConf : null);

  if (commands.includes(firstArgument)) {
    return;
  }

  if (!wdioConf || firstArgument === 'config') {
    return (0, _setup.default)();
  }

  if (params.watch) {
    const watcher = new _watcher.default(wdioConf, params);
    return watcher.watch();
  }

  if (process.stdin.isTTY || !process.stdout.isTTY) {
    return launch(wdioConf, params);
  }

  const stdin = process.openStdin();
  stdin.setEncoding('utf8');
  stdin.on('data', data => {
    stdinData += data;
  });
  stdin.on('end', () => {
    if (stdinData.length > 0) {
      params.specs = stdinData.trim().split(/\r?\n/);
    }

    launch(wdioConf, params);
  });
}

function launch(wdioConf, params) {
  const launcher = new _launcher.default(wdioConf, params);
  return launcher.run().then(process.exit).catch(err => {
    console.error(err);
    process.exit(1);
  });
}